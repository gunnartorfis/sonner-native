"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[480],{1553:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>o,default:()=>h,frontMatter:()=>r,metadata:()=>l,toc:()=>a});var s=n(4848),i=n(8453);const r={sidebar_position:3},o=void 0,l={id:"Toaster",title:"Toaster",description:"The Toaster is the context component which manages the addition, update, and removal of toast notifications and must be rendered within both the SafeAreaProvider and GestureHandlerRootView.",source:"@site/docs/Toaster.md",sourceDirName:".",slug:"/Toaster",permalink:"/sonner-native/Toaster",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"defaultSidebar",previous:{title:"toast()",permalink:"/sonner-native/toast"},next:{title:"Comparison with Sonner web",permalink:"/sonner-native/sonner"}},d={},a=[{value:"Usage",id:"usage",level:2},{value:"Customization",id:"customization",level:2},{value:"Position",id:"position",level:3},{value:"Default styles for toasts",id:"default-styles-for-toasts",level:3},{value:"Usage with react-native-z-view",id:"usage-with-react-native-z-view",level:3},{value:"Dismiss toast on tap",id:"dismiss-toast-on-tap",level:3},{value:"API Reference",id:"api-reference",level:2}];function c(e){const t={a:"a",code:"code",h2:"h2",h3:"h3",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(t.p,{children:["The Toaster is the context component which manages the addition, update, and removal of toast notifications and must be rendered within both the ",(0,s.jsx)(t.code,{children:"SafeAreaProvider"})," and ",(0,s.jsx)(t.code,{children:"GestureHandlerRootView"}),"."]}),"\n",(0,s.jsx)(t.h2,{id:"usage",children:"Usage"}),"\n",(0,s.jsx)(t.p,{children:"To use the Toaster, place it at the root level of your app, after the NavigationContainer, to ensure it works across all screens. Here's an example setup:"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-tsx",children:"import { Toaster } from 'sonner-native';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { SafeAreaProvider } from 'react-native-safe-area-context';\nimport { GestureHandlerRootView } from 'react-native-gesture-handler';\n\nexport default function App() {\n  return (\n    <SafeAreaProvider>\n      <GestureHandlerRootView>\n        <NavigationContainer>{/* App content */}</NavigationContainer>\n        <Toaster />\n      </GestureHandlerRootView>\n    </SafeAreaProvider>\n  );\n}\n"})}),"\n",(0,s.jsx)(t.h2,{id:"customization",children:"Customization"}),"\n",(0,s.jsx)(t.p,{children:"The Toaster component can provide default styles for all toasts, but individual toasts can also be customized. The Toaster component accepts a number of props to customize the appearance and behavior of the toasts."}),"\n",(0,s.jsx)(t.h3,{id:"position",children:"Position"}),"\n",(0,s.jsxs)(t.p,{children:["The ",(0,s.jsx)(t.code,{children:"position"})," prop determines where the toasts are displayed on the screen."]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-tsx",children:'// Available positions:\n// top-center, bottom-center\n<Toaster position="bottom-center" />\n'})}),"\n",(0,s.jsx)(t.h3,{id:"default-styles-for-toasts",children:"Default styles for toasts"}),"\n",(0,s.jsxs)(t.p,{children:["You can provide default styles for all toasts by passing the ",(0,s.jsx)(t.code,{children:"style"})," prop to the Toaster component. All customization passed to the toast() will be concatenated with these default styles."]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-tsx",children:"<Toaster\n  toastOptions={{\n    style: { backgroundColor: 'red' },\n  }}\n/>\n"})}),"\n",(0,s.jsx)(t.h3,{id:"usage-with-react-native-z-view",children:"Usage with react-native-z-view"}),"\n",(0,s.jsxs)(t.p,{children:["Use the ",(0,s.jsx)(t.code,{children:"ToasterOverlayWrapper"})," prop to wrap the Toaster component with a custom component. This is useful when using ",(0,s.jsx)(t.code,{children:"react-native-z-view"})," to render the toasts."]}),"\n",(0,s.jsxs)(t.p,{children:["sonner-native uses ",(0,s.jsx)(t.code,{children:"FullWindowOverlay"})," from react-native-screens by default on iOS and ",(0,s.jsx)(t.code,{children:"View"})," on Android."]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-tsx",children:"import { ZView } from 'react-native-z-view';\n\n<Toaster\n  ToasterOverlayWrapper={ZView}\n  toastOptions={{\n    style: { backgroundColor: 'red' },\n  }}\n/>;\n"})}),"\n",(0,s.jsx)(t.h3,{id:"dismiss-toast-on-tap",children:"Dismiss toast on tap"}),"\n",(0,s.jsxs)(t.p,{children:["Use the ",(0,s.jsx)(t.code,{children:"ToastWrapper"})," prop to wrap the Toast component with a custom component. This is useful when you want to customize the behavior of the toast, for example add a dismiss on tap instead of the the close icon."]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-tsx",children:"import { Pressable } from \"react-native\"\n\nfunction Wrapper({toastId, children}){\n  function onPress(){\n    toast.dismiss(toastId)\n  }\n  return <Pressable onPress={onPress}>{children}</Pressable>\n}\n\n<Toaster\n  ToastWrapper={Wrapper}\n  toastOptions={{\n    style: { backgroundColor: 'red' },\n  }}\n/>;\n"})}),"\n",(0,s.jsx)(t.h2,{id:"api-reference",children:"API Reference"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Property"}),(0,s.jsx)(t.th,{style:{textAlign:"center"},children:"Description"}),(0,s.jsx)(t.th,{style:{textAlign:"right"},children:"Default"})]})}),(0,s.jsxs)(t.tbody,{children:[(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"theme"}),(0,s.jsxs)(t.td,{style:{textAlign:"center"},children:[(0,s.jsx)(t.code,{children:"light"}),", ",(0,s.jsx)(t.code,{children:"dark"})]}),(0,s.jsx)(t.td,{style:{textAlign:"right"},children:(0,s.jsx)(t.code,{children:"light"})})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"visibleToasts"}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"Maximum number of visible toasts"}),(0,s.jsx)(t.td,{style:{textAlign:"right"},children:(0,s.jsx)(t.code,{children:"3"})})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"position"}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"Place where the toasts will be rendered"}),(0,s.jsx)(t.td,{style:{textAlign:"right"},children:(0,s.jsx)(t.code,{children:"top-center"})})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"offset"}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"Offset from the top or bottom"}),(0,s.jsx)(t.td,{style:{textAlign:"right"},children:(0,s.jsx)(t.code,{children:"0"})})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"closeButton"}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"Adds a close button to all toasts"}),(0,s.jsx)(t.td,{style:{textAlign:"right"},children:(0,s.jsx)(t.code,{children:"false"})})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"invert"}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"Dark toasts in light mode and vice versa."}),(0,s.jsx)(t.td,{style:{textAlign:"right"},children:(0,s.jsx)(t.code,{children:"false"})})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"toastOptions"}),(0,s.jsxs)(t.td,{style:{textAlign:"center"},children:["These will act as default options for all toasts. See ",(0,s.jsx)(t.a,{href:"/toast",children:"toast()"})," for all available options."]}),(0,s.jsx)(t.td,{style:{textAlign:"right"},children:(0,s.jsx)(t.code,{children:"{}"})})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"gap"}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"Gap between toasts when expanded"}),(0,s.jsx)(t.td,{style:{textAlign:"right"},children:(0,s.jsx)(t.code,{children:"16"})})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"icons"}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"Changes the default icons"}),(0,s.jsx)(t.td,{style:{textAlign:"right"},children:(0,s.jsx)(t.code,{children:"-"})})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"pauseWhenPageIsHidden"}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"Pauses toast timers when the app enters background."}),(0,s.jsx)(t.td,{style:{textAlign:"right"},children:(0,s.jsx)(t.code,{children:"{}"})})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"swipeToDismissDirection"})}),(0,s.jsxs)(t.td,{style:{textAlign:"center"},children:["Swipe direction to dismiss (",(0,s.jsx)(t.code,{children:"left"}),", ",(0,s.jsx)(t.code,{children:"up"}),")."]}),(0,s.jsx)(t.td,{style:{textAlign:"right"},children:(0,s.jsx)(t.code,{children:"up"})})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"ToasterOverlayWrapper"}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"\xa0Custom component to wrap the Toaster."}),(0,s.jsx)(t.td,{style:{textAlign:"right"},children:(0,s.jsx)(t.code,{children:"div"})})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"ToastWrapper"}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"\xa0Custom component to wrap the Toast."}),(0,s.jsx)(t.td,{style:{textAlign:"right"},children:(0,s.jsx)(t.code,{children:"div"})})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"autoWiggleOnUpdate"}),(0,s.jsxs)(t.td,{style:{textAlign:"center"},children:["Adds a wiggle animation on toast update. ",(0,s.jsx)(t.code,{children:"never"}),", ",(0,s.jsx)(t.code,{children:"toast-change"}),", ",(0,s.jsx)(t.code,{children:"always"})]}),(0,s.jsx)(t.td,{style:{textAlign:"right"},children:(0,s.jsx)(t.code,{children:"never"})})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"richColors"}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"\xa0Makes error and success state more colorful"}),(0,s.jsx)(t.td,{style:{textAlign:"right"},children:(0,s.jsx)(t.code,{children:"false"})})]})]})]})]})}function h(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>o,x:()=>l});var s=n(6540);const i={},r=s.createContext(i);function o(e){const t=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function l(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),s.createElement(r.Provider,{value:t},e.children)}}}]);